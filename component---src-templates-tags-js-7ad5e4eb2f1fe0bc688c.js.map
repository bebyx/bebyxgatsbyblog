{"version":3,"sources":["webpack:///./src/templates/tags.js"],"names":["Tags","pageContext","data","tag","allMarkdownRemark","edges","tagHeader","totalCount","title","description","site","siteMetadata","class","map","node","slug","fields","frontmatter","date","key","to","align","pageQuery"],"mappings":"2FAAA,8GA0DeA,UAlDF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IAD8B,EAERD,EAAKE,kBAA3BC,EAF8B,EAE9BA,MACFC,EAAS,mBAAsBH,EAAtB,MAHuB,EAEvBI,WAGf,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAK,kBAAoBL,EAApB,IAA4BM,YAAW,kBAAoBN,EAApB,cAAqCD,EAAKQ,KAAKC,aAAaH,QAC7G,yBAAKI,MAAM,gBACT,4BAAKN,GACL,4BACGD,EAAMQ,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KADe,EAECD,EAAKG,YAArBT,EAFe,EAEfA,MAAOU,EAFQ,EAERA,KACf,OACE,wBAAIC,IAAKJ,GACP,kBAAC,OAAD,CAAMK,GAAIL,GAAOP,GADnB,MACoCU,OAK1C,uBAAGG,MAAM,UAAS,kBAAC,OAAD,CAAMD,GAAG,SAAQ,4CA+BpC,IAAME,EAAS","file":"component---src-templates-tags-js-7ad5e4eb2f1fe0bc688c.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\n// Components\nimport { Link, graphql } from \"gatsby\"\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `Постів з теґом \"${tag}\": ${totalCount}`\n\n  return (\n    <Layout>\n      <SEO title={`Пости з теґом \"${tag}\"`} description={`Пости з теґом \"${tag}\" на блозі ${data.site.siteMetadata.title}`} />\n      <div class=\"special-page\">\n        <h1>{tagHeader}</h1>\n        <ul>\n          {edges.map(({ node }) => {\n            const { slug } = node.fields\n            const { title, date } = node.frontmatter\n            return (\n              <li key={slug}>\n                <Link to={slug}>{title}</Link> — {date}\n              </li>\n            )\n          })}\n        </ul>\n        <p align=\"center\"><Link to=\"/tags\"><b>Всі теґи</b></Link></p>\n        </div>\n    </Layout>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(\n              formatString: \"DD MMMM, YYYY\"\n              locale: \"uk_UA\"\n            )\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}